type Falsy = false | 0 | "" | null | undefined;

export function isTruthy<T>(x: T | Falsy): boolean %checks {
    // NOTE(kevinb): Using `!!` in Flow does not provide the same type
    // checking behavior that it does in TS, but `Boolean()` does.
    return Boolean(x);
}

// NOTE(kevinb): There is no export for `isNonNullable` because I couldn't
// create a predicate function in Flow that has the same behavior.
